<?php
/**
 * CurlTest 2
 * 
 * Original testing for connecting to Booker API via Curl with PHP
 *
 * Codes and Keys stored commented here:
 * $OASKey = 'fe2de837b6624c91a93e36350743e223';
 * $grantstring = "grant_type=client_credentials&client_id=wjfobeqQUIsQ&client_secret=7HcPPOhErNE1&scope=customer";
 */ 

$OASKey = 'fe2de837b6624c91a93e36350743e223';
$client_id = 'wjfobeqQUIsQ';
$client_secret = '7HcPPOhErNE1';

/**
 * Step One - Obtain Token
 * Function createBookerToken to obtain an access token from Booker API
 * variable $cid     - Client ID, specific to each location
 * variable $csecret - Client Secret or Key, specific to each location
 */
function createBookerToken($cid, $csecret, $ckey) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://api-staging.booker.com/v5/auth/connect/token');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, sprintf("grant_type=client_credentials&client_id=%s&client_secret=%s&scope=customer", $cid, $csecret) );

    //if ($_SERVER['SERVER_NAME'] == 'localhost') {
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    //}

    curl_setopt($ch, CURLOPT_POST, 1);
    $headers = array();
    $headers[] = 'Content-Type: application/x-www-form-urlencoded';
    //$headers[] = 'Ocp-Apim-Subscription-Key: fe2de837b6624c91a93e36350743e223';
    $headers[] = sprintf("Ocp-Apim-Subscription-Key: %s", $ckey );
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    } 
    curl_close($ch);
    return $result;
}
$tokenoutput = createBookerToken($client_id, $client_secret, $OASKey);
$token = json_decode($tokenoutput);
$sessiontoken = $token->access_token; //This value, once generated, is good for 30 minutes (1800 seconds)
echo "1.) Token for current session is vaild for 30 minutes once generated:<br>";
echo "<div style='font-size:x-small; word-break: break-all;'>" . $sessiontoken . "</div>";
echo "<hr>";







/**
 * PRE Step Two - Use Find Locations classes to get STRING
 * Create JSON Object that has required Data Structure for FUNCTION findBookerLocation to use
 * Uses the $sessiontoken varible created by the execution of Step One above
 */
class sortLocationsBy {
    public $SortBy = 'Name';
    public $SortDirection = 0;
}

class findLocations {
    public $UsePaging = "";
    public $PageNumber = "";
    public $PageSize = "";

    public $SortBy = array();
    public function __construct(){
        array_push($this->SortBy, new sortLocationsBy);
    }
    public $access_token = "";
}
$p = new FindLocations();
$p->UsePaging = true;
$p->PageNumber = 1;
$p->PageSize = 80;
$p->access_token = $sessiontoken;

$pstring = json_encode($p);
//echo $pstring;
//echo "<hr><hr><hr>";

/**
 * Step Two - Find Location
 * Function findBookerLocation to obtain JSON data for location
 * $stringToPost - value generated by FindLocations CLASS executed in Step Two above
 */
function findBookerLocation($stringToPost) {
    $chloc = curl_init();
    curl_setopt($chloc, CURLOPT_URL, 'https://api-staging.booker.com/v4.1/customer/locations');
    curl_setopt($chloc, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($chloc, CURLOPT_POSTFIELDS, $stringToPost );

    //if ($_SERVER['SERVER_NAME'] == 'localhost') {
    curl_setopt($chloc, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($chloc, CURLOPT_SSL_VERIFYPEER, false);
    //}

    curl_setopt($chloc, CURLOPT_POST, 1);
    $locheaders = array();
    $locheaders[] = 'Content-Type: application/json';
    $locheaders[] = 'Ocp-Apim-Subscription-Key: fe2de837b6624c91a93e36350743e223';
    curl_setopt($chloc, CURLOPT_HTTPHEADER, $locheaders);
    $locresult = curl_exec($chloc);
    if (curl_errno($chloc)) {
        echo 'Error:' . curl_error($chloc);
    }
    curl_close($chloc);
    return $locresult;
}

//$findlocation = findBookerLocation($sessiontoken);
$findlocation = findBookerLocation($pstring);
$location = json_decode($findlocation);
//echo "<br><br>";
//var_dump($findlocation);
//echo "<hr>";

$location_zip = $location->Results[0]->Address->Zip; //returns 75024
$location_id =  $location->Results[0]->ID;

echo "ZIP from JSON:" . $location_zip;
echo "&nbsp; &mdash; &nbsp;";
echo "ID from JSON:" . $location_id;














/**
 * PRE Step Three - Find Treatments
 * Create JSON Object that has required Data Structure for FUNCTION findBookerLocation to use
 * Uses the $sessiontoken varible created by the execution of Step One above
 * 
 */
class sortTreatmentsBy {
    //public $SortBy = 'ID';
    public $SortBy = 'DisplayName';
    public $SortDirection = 0;
}
class findTreatments {
    public $LocationID = "";
    public $UsePaging = "";
    public $PageNumber = "";
    public $PageSize = "";
    public $SortBy = array();
    public function __construct(){
        array_push($this->SortBy, new sortTreatmentsBy);
    }
    public $access_token = "";
}
$t = new FindTreatments();
$t->UsePaging = true;
$t->PageNumber = 1;
$t->PageSize = 80;
$t->access_token = $sessiontoken;
$t->LocationID = $location_id;

$tstring = json_encode($t);
//echo "<hr>";
//echo "4.) JSON string passed to lookup Services for Location (with Token):<br>";
//echo $tstring;

/**
 * Step Three - Find Treatments
 * Function findBookerTreatments to obtain JSON data for treatments by location
 * 
 */
function findBookerTreatments($stringToPost) {
    $chloc = curl_init();
    curl_setopt($chloc, CURLOPT_URL, 'https://api-staging.booker.com/v4.1/customer/treatments');
    curl_setopt($chloc, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($chloc, CURLOPT_POSTFIELDS, $stringToPost );

    //if ($_SERVER['SERVER_NAME'] == 'localhost') {
    curl_setopt($chloc, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($chloc, CURLOPT_SSL_VERIFYPEER, false);
    //}

    curl_setopt($chloc, CURLOPT_POST, 1);
    $locheaders = array();
    $locheaders[] = 'Content-Type: application/json';
    $locheaders[] = 'Ocp-Apim-Subscription-Key: fe2de837b6624c91a93e36350743e223';
    curl_setopt($chloc, CURLOPT_HTTPHEADER, $locheaders);
    $locresult = curl_exec($chloc);
    if (curl_errno($chloc)) {
        echo 'Error:' . curl_error($chloc);
    }
    curl_close($chloc);
    return $locresult;
}

$showtreatments = findBookerTreatments($tstring);
$treatments = json_decode($showtreatments);
//echo "<hr><hr><hr>";
//var_dump($showtreatments);

echo "<br><br>";
echo "4.1) Parsed JSON results of Services for Location:";
foreach ($treatments as $treatment) {
    foreach($treatment as $service) {
        echo "<br>Service: ";
        echo $service->DisplayName;
        echo ",  ";
        echo $service->Name;
        echo ",  ";
        echo $service->ID;
        echo ",  ";
        echo $service->Price->Amount;
        echo ",  ";
        echo $service->Category->Name;
        echo ",  ";
        echo $service->SubCategory->Name;
        echo ",  ";
    }
}










/**
 * Step Four - Find Employees
 * Function findBookerEmployees to obtain JSON data for Employees at Location who can perform selected treatments
 * 
 */
$selected_service_id = 1771411; // Classic Extensions
//$selected_service_id = 2209618; // Microblading

class sortEmployeesBy {
    //public $SortBy = 'ID';
    public $SortBy = 'FirstName';
    public $SortDirection = 0;
}
class findEmployees {
    public $LocationID = "";
    public $TreatmentID = "";
    public $UsePaging = "";
    public $PageNumber = "";
    public $PageSize = "";
    public $SortBy = array();
    public function __construct(){
        array_push($this->SortBy, new sortEmployeesBy);
    }
    public $access_token = "";
}
$e = new FindEmployees();
$e->UsePaging = true;
$e->PageNumber = 1;
$e->PageSize = 80;
$e->access_token = $sessiontoken;
$e->LocationID = $location_id;
$e->TreatmentID = $selected_service_id;

$estring = json_encode($e);
echo "<hr>";
//echo "5.) JSON string passed to lookup Employee for SELECTED Service (Classic Extensions) at Location (with Token):<br>";
//echo $estring;

function findBookerEmployees($stringToPost, $skey) {
    $chloc = curl_init();
    curl_setopt($chloc, CURLOPT_URL, 'https://api-staging.booker.com/v4.1/customer/employees');
    curl_setopt($chloc, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($chloc, CURLOPT_POSTFIELDS, $stringToPost );

    //if ($_SERVER['SERVER_NAME'] == 'localhost') {
    curl_setopt($chloc, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($chloc, CURLOPT_SSL_VERIFYPEER, false);
    //}

    curl_setopt($chloc, CURLOPT_POST, 1);
    $locheaders = array();
    $locheaders[] = 'Content-Type: application/json';
    //$locheaders[] = 'Ocp-Apim-Subscription-Key: fe2de837b6624c91a93e36350743e223';
    $locheaders[] = sprintf("Ocp-Apim-Subscription-Key: %s", $skey );
    curl_setopt($chloc, CURLOPT_HTTPHEADER, $locheaders);
    $locresult = curl_exec($chloc);
    if (curl_errno($chloc)) {
        echo 'Error:' . curl_error($chloc);
    }
    curl_close($chloc);
    return $locresult;
}

$showemployees = findBookerEmployees($estring, $OASKey);
$employees = json_decode($showemployees);
//echo "<hr><hr><hr>";
//var_dump($showemployees);

echo "<br><br>";
echo "5.1) Parsed JSON results of Employees for Selected Service at Location:";
foreach ($employees as $employee) {
    foreach($employee as $staff) {
        echo "<br>Employee: ";
        echo $staff->FirstName;
        echo ",  ";
        echo $staff->LastName;
        echo ",  ";
        echo $staff->ID;
        echo ",  ";
        echo $staff->Gender->ID;
        echo ",  ";
        echo $staff->Gender->Name;
        echo ",  ";
    }
}










/**
 * Step Five - Get Chosen Employee Schedule
 * Function findBookerEmployees to obtain JSON data for Employees at Location who can perform selected treatments
 * 
 */
//$selected_employee_id = 401460; // Monica T.
$selected_employee_id = '566892'; // Kelli W.
$selected_location_id = '31876';
$selected_from_date = '2019-09-27T01:00:00';
$selected_to_date = '2019-09-30T01:00:00';

//function getEmployeeSechedule($s_e_id, $s_l_id, $s_f_d, $s_t_d) {
function getEmployeeSechedule($acctoken, $skey, $s_l_id, $s_f_d, $s_t_d, $s_e_id) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, sprintf('https://api-staging.booker.com/v5/realtime_availability/AvailableDates?locationIds=%s&fromDate=%s&toDate=%s&employeeId=%s', $s_l_id, $s_f_d, $s_t_d, $s_e_id) );
    //curl_setopt($ch, CURLOPT_URL, 'https://api-staging.booker.com/v5/realtime_availability/AvailableDates?locationIds=31876&fromDate=2019-09-27T01:00:00&toDate=2019-09-30T01:00:00&employeeId=566892');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

    //curl_setopt($ch, CURLOPT_POSTFIELDS, sprintf("grant_type=client_credentials&client_id=%s&client_secret=%s&scope=customer", $cid, $csecret) );

    //if ($_SERVER['SERVER_NAME'] == 'localhost') {
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    //}

    //curl_setopt($ch, CURLOPT_POST, 1);

    $getheaders = array();
    $getheaders[] = sprintf("Authorization: Bearer %s", $acctoken);
    //$getheaders[] = 'Ocp-Apim-Subscription-Key: fe2de837b6624c91a93e36350743e223';
    $getheaders[] = sprintf("Ocp-Apim-Subscription-Key: %s", $skey );
    curl_setopt($ch, CURLOPT_HTTPHEADER, $getheaders);
    $emresult = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    } 
    curl_close($ch);
    return $emresult;
}
$scheduleoutput = getEmployeeSechedule($sessiontoken, $OASKey, $selected_location_id, $selected_from_date, $selected_to_date, $selected_employee_id);
//$scheduleoutput = getEmployeeSechedule($selected_employee_id, $selected_location_id, $selected_from_date, $selected_to_date);
$selected_schedule = json_decode($scheduleoutput);

echo "<hr>";
echo "X.) Availability Schedule for Employee #".$selected_employee_id.":<br>";
//print_r($selected_schedule);


foreach ($selected_schedule as $schedule) {
//echo "Location ID:" . $schedule->locationId;
$category_array = $schedule->serviceCategories;
//print_r($category_array);
    foreach($category_array as $service_category) { 
        //echo "<br>Category ID:" . $service_category->serviceCategoryId;
        $cat_service_array = $service_category->services;
        foreach($cat_service_array as $staff_service) {
            echo "<br>Staff Service: ";
            echo $staff_service->serviceId;
            echo ",  ";
            echo $staff_service->serviceName;
            $staff_avail_array = $staff_service->availability;
            foreach( $staff_avail_array as $timeslot) {
                echo " &nbsp; " . $timeslot;
            }
        }
    }
/*    foreach($treatment as $service) {
        echo "<br>Service: ";
        echo $service->DisplayName;
        echo ",  ";
        echo $service->Name;
        echo ",  ";
        echo $service->ID;
        echo ",  ";
        echo $service->Price->Amount;
        echo ",  ";
        echo $service->Category->Name;
        echo ",  ";
        echo $service->SubCategory->Name;
        echo ",  ";
    }*/
}